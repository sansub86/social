{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","messages","DialogItem","props","react_default","a","createElement","className","s","dialog","react_router_dom","to","id","name","Message","message","maxLength20","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","isAuth","map","d","Dialogs_DialogItem_DialogItem","m","Dialogs_Message_Message","likesCount","formData","addMessage","addNewMessageText","react_router","compose","WithAuthRedirect","connect","state","dialogsPage","newMessageText","auth","dispatch","messageText","sendMessageActionCreator"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,SAAA,gDCAlBJ,EAAAC,QAAA,CAAkBE,aAAA,uDCAlBH,EAAAC,QAAA,CAAkBE,aAAA,iJCYHE,EAPI,SAACC,GAChB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEC,QACdL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,GAAI,YAAcR,EAAMS,IAAKT,EAAMU,0BCGzCC,EANC,SAACX,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEO,SAAUZ,EAAMY,mDCHpCC,EAAcC,YAAiB,IAaxBC,EAAsBC,YAAU,CAACC,KAAK,yBAAhBD,CAZZ,SAAChB,GACpB,OACIC,EAAAC,EAAAC,cAAA,QAAMe,SAAUlB,EAAMmB,cAClBlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,oBAAoBe,YAAY,oBAExGxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4ECuBDuB,EA1BC,SAAC1B,GAIb,OAAIA,EAAM2B,OAEN1B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAET,SACdK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAER,cAEVG,EAAMJ,QAAQgC,IAAI,SAAAC,GAAC,OAAI5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAYrB,GAAIoB,EAAEpB,GAAIC,KAAMmB,EAAEnB,UAI7DT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WAEQH,EAAMF,SAAS8B,IAAI,SAAAG,GAAC,OAAI9B,EAAAC,EAAAC,cAAC6B,EAAD,CAASpB,QAASmB,EAAEnB,QAASqB,WAAYF,EAAEE,gBAG3EhC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACY,EAAD,CAAqBG,SAnBnB,SAACgB,GACflC,EAAMmC,WAAWD,EAASE,yBAELnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAU7B,GAAI,mCCY5B8B,sBACXC,IACAC,YAlBkB,SAACC,GACnB,MAAO,CACH7C,QAAS6C,EAAMC,YAAY9C,QAC3BE,SAAU2C,EAAMC,YAAY5C,SAC5B6C,eAAiBF,EAAMC,YAAYC,eACnChB,OAAQc,EAAMG,KAAKjB,SAGF,SAACkB,GACtB,MAAO,CACHV,WAAY,SAACW,GACTD,EAASE,YAAyBD,QAK/BR,CAGbZ","file":"static/js/4.669de3fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Bgf2n\",\"dialogsItems\":\"Dialogs_dialogsItems__hmRbu\",\"messages\":\"Dialogs_messages__3eTVt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__271Dt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"Message_dialogsItems__1LDpY\"};","/**\r\n * Created by User-35 on 07.08.2019.\r\n */\r\nimport React from 'react'\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\nexport default DialogItem;","/**\r\n * Created by User-35 on 07.08.2019.\r\n */\r\nimport React from 'react'\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength20]} name=\"addNewMessageText\" placeholder=\"newMessageText\"/>\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm({form:\"addNewMessageTextForm\"})(AddMessageForm);\r\n","/**\r\n * Created by User-35 on 07.08.2019.\r\n */\r\nimport React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let sendMessage = (formData) => {\r\n        props.addMessage(formData.addNewMessageText);\r\n    };\r\n    if(!props.isAuth) return <Redirect to={\"/login\"}/>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {\r\n                    props.dialogs.map(d => <DialogItem id={d.id} name={d.name}/>)\r\n\r\n                }\r\n            </div>\r\n            <div className=\"messages\">\r\n                <div>\r\n                    {\r\n                        props.messages.map(m => <Message message={m.message} likesCount={m.likesCount}/>)\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={sendMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Dialogs;","/**\r\n * Created by User-35 on 07.08.2019.\r\n */\r\nimport React from 'react'\r\nimport {sendMessageActionCreator} from \"../../redux/dialogs_reducer\"\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\"\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText : state.dialogsPage.newMessageText,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (messageText) => {\r\n            dispatch(sendMessageActionCreator(messageText));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    WithAuthRedirect,\r\n    connect(mapStateToProps,mapDispatchToProps)\r\n)(Dialogs)"],"sourceRoot":""}